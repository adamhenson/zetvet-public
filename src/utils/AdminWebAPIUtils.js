import AdminActions from '../actions/AdminActions.js';

export default {

  /**
   * Get data from via http GET request. This action simply
   *    executes the request. The response is then delegated 
   *    via the `receive` action.
   * @param  {object} url A URL to make the GET request with.
   * @param  {object} component A React component class name.
   */
  get(url, component) {
    let self = this;

    $.ajax({
      'url': url,
      'type': 'get'
    }).done((response) => {
      self.handleResponse({'data' : response}, component);
    }).error((xhr, status, error) => {
      self.handleResponse({'xhr' : xhr}, component);
    });
  },

  /**
   * Save data from a submitted form, via http POST, PUT, or DELETE
   *    request. This action simply executes the request. The response
   *    is then delegated via the `receive` action.
   * @param  {object} event An event object. This should be a change
   *    event from a file input.
   * @param  {object} component A React component class name.
   */
  save(event, component) {
    let self = this;
    let $this = $(event.target);
    let formData = new FormData($this[0]);
    let method = $this.attr('data-method');

    $.ajax({
      'url': $this.attr('action'),
      'type': method,
      'data': formData,
      'enctype': $this.attr('enctype'),
      'processData': false,
      'contentType': false 
    }).done((response) => {
      response.method = method.toLowerCase();
      self.handleResponse(response, component);
    }).error((xhr, status, error) => {
      self.handleResponse({'xhr' : xhr}, component);
    });
  },

  /**
   * Helper function to reduce redundancy in this file.
   * @param  {object} response Data object to transmit to the store
   * via the `receive` method.
   * @param  {object} component A React component class name.
   */
  handleResponse(response, component) {
    if(response && response.xhr) {
      let message = this.getHttpErrorMessage(response.xhr);

      AdminActions.receive({
        'type' : 'error',
        'component' : component,
        'body' : message
      });
    } else if(response) {
      if(response.data && response.data.message && response.data.message.success) {
        AdminActions.receive({
          'type' : 'success',
          'component' : component,
          'body' : response.data.message.success
        });

        if(response.method && response.method === 'delete' && !response.data.responseData && component.toLowerCase() === 'adminbiocover') {
          response.data.responseData = {
            'pic' : false,
            'isUnsaved' : false
          }
        }
      }
      if(response.data && response.data.responseData) {
        response.data.responseData.isUnsaved = false;
        
        if(component.toLowerCase() === 'adminbiocard' && !response.data.responseData.pic) {
          response.data.responseData.pic = null;
        }

        AdminActions.receive({
          'component' : component,
          'data' : response.data.responseData
        });
      };
    }
  },

  /**
   * Get error generated by an http request and formulate a message.
   * @param  {object} xhr Object generated after http request.
   * @return {string || false}
   */
  getHttpErrorMessage(xhr) {
    return (!xhr || !xhr.responseJSON || !xhr.responseJSON.data || !xhr.responseJSON.data.message || !xhr.responseJSON.data.message.error)
      ? ('Something went wrong.')
      : xhr.responseJSON.data.message.error;
  }

};